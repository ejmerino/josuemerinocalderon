<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picRectangulo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>